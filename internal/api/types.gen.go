// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for OAuth2AuthorizationRequestResponseType.
const (
	Code OAuth2AuthorizationRequestResponseType = "code"
)

// Defines values for OAuth2ErrorSchemaError.
const (
	InvalidClient        OAuth2ErrorSchemaError = "invalid_client"
	InvalidGrant         OAuth2ErrorSchemaError = "invalid_grant"
	InvalidRequest       OAuth2ErrorSchemaError = "invalid_request"
	InvalidScope         OAuth2ErrorSchemaError = "invalid_scope"
	UnauthorizedClient   OAuth2ErrorSchemaError = "unauthorized_client"
	UnsupportedGrantType OAuth2ErrorSchemaError = "unsupported_grant_type"
)

// Defines values for OAuth2TokenRequestGrantType.
const (
	AuthorizationCode OAuth2TokenRequestGrantType = "authorization_code"
	ClientCredentials OAuth2TokenRequestGrantType = "client_credentials"
	Password          OAuth2TokenRequestGrantType = "password"
	RefreshToken      OAuth2TokenRequestGrantType = "refresh_token"
)

// Defines values for OAuth2TokenResponseTokenType.
const (
	Bearer OAuth2TokenResponseTokenType = "Bearer"
)

// CreateApplicationRequest defines model for CreateApplicationRequest.
type CreateApplicationRequest struct {
	Name  string   `json:"name"`
	Users []string `json:"users"`
}

// CreateApplicationResponse defines model for CreateApplicationResponse.
type CreateApplicationResponse struct {
	ClientId *string `json:"clientId,omitempty"`
}

// CreateTenantResponse defines model for CreateTenantResponse.
type CreateTenantResponse struct {
	CreatedAt time.Time `json:"createdAt"`
	TenantId  string    `json:"tenantId"`
	Version   string    `json:"version"`
}

// CreateUserRequest defines model for CreateUserRequest.
type CreateUserRequest struct {
	Password string `json:"password"`
}

// ListApplicationUsersResponse defines model for ListApplicationUsersResponse.
type ListApplicationUsersResponse struct {
	NextToken *string   `json:"nextToken,omitempty"`
	Usernames *[]string `json:"usernames,omitempty"`
}

// OAuth2AuthorizationRequest defines model for OAuth2AuthorizationRequest.
type OAuth2AuthorizationRequest struct {
	ClientId     string                                 `json:"client_id"`
	RedirectUri  *string                                `json:"redirect_uri,omitempty"`
	ResponseType OAuth2AuthorizationRequestResponseType `json:"response_type"`
	Scope        *string                                `json:"scope,omitempty"`
}

// OAuth2AuthorizationRequestResponseType defines model for OAuth2AuthorizationRequest.ResponseType.
type OAuth2AuthorizationRequestResponseType string

// OAuth2ErrorSchema defines model for OAuth2ErrorSchema.
type OAuth2ErrorSchema struct {
	Error            OAuth2ErrorSchemaError `json:"error"`
	ErrorDescription *string                `json:"error_description,omitempty"`
	ErrorUri         *string                `json:"error_uri,omitempty"`
}

// OAuth2ErrorSchemaError defines model for OAuth2ErrorSchema.Error.
type OAuth2ErrorSchemaError string

// OAuth2TokenRequest defines model for OAuth2TokenRequest.
type OAuth2TokenRequest struct {
	Code         *string                     `json:"code,omitempty"`
	GrantType    OAuth2TokenRequestGrantType `json:"grant_type"`
	RefreshToken *string                     `json:"refresh_token"`
	Scope        *string                     `json:"scope"`
}

// OAuth2TokenRequestGrantType defines model for OAuth2TokenRequest.GrantType.
type OAuth2TokenRequestGrantType string

// OAuth2TokenResponse defines model for OAuth2TokenResponse.
type OAuth2TokenResponse struct {
	AccessToken  string                       `json:"access_token"`
	ExpiresIn    float32                      `json:"expires_in"`
	RefreshToken *string                      `json:"refresh_token,omitempty"`
	Scope        *string                      `json:"scope,omitempty"`
	TokenType    OAuth2TokenResponseTokenType `json:"token_type"`
}

// OAuth2TokenResponseTokenType defines model for OAuth2TokenResponse.TokenType.
type OAuth2TokenResponseTokenType string

// ResetPasswordRequest defines model for ResetPasswordRequest.
type ResetPasswordRequest struct {
	NewPassword string `json:"newPassword"`
	OldPassword string `json:"oldPassword"`
}

// UserLoginRequest defines model for UserLoginRequest.
type UserLoginRequest struct {
	Password    string  `json:"password"`
	RedirectUri *string `json:"redirectUri,omitempty"`
	Username    string  `json:"username"`
}

// UserLoginResponse defines model for UserLoginResponse.
type UserLoginResponse struct {
	RedirectUrl string `json:"redirectUrl"`
}

// BadRequestError defines model for BadRequestError.
type BadRequestError struct {
	Message *string `json:"message,omitempty"`
}

// ConflictError defines model for ConflictError.
type ConflictError struct {
	Message *string `json:"message,omitempty"`
}

// ForbiddenError defines model for ForbiddenError.
type ForbiddenError struct {
	Message *string `json:"message,omitempty"`
}

// InternalServerError defines model for InternalServerError.
type InternalServerError struct {
	Message *string `json:"message,omitempty"`
}

// NotFoundError defines model for NotFoundError.
type NotFoundError struct {
	Message *string `json:"message,omitempty"`
}

// OAuthErrorBadRequest defines model for OAuthErrorBadRequest.
type OAuthErrorBadRequest = OAuth2ErrorSchema

// UnauthorizedError defines model for UnauthorizedError.
type UnauthorizedError struct {
	Message *string `json:"message,omitempty"`
}

// ListApplicationUsersParams defines parameters for ListApplicationUsers.
type ListApplicationUsersParams struct {
	NextToken  *string `form:"nextToken,omitempty" json:"nextToken,omitempty"`
	MaxResults *int    `form:"maxResults,omitempty" json:"maxResults,omitempty"`
}

// OAuth2AuthorizeFormdataRequestBody defines body for OAuth2Authorize for application/x-www-form-urlencoded ContentType.
type OAuth2AuthorizeFormdataRequestBody = OAuth2AuthorizationRequest

// OAuth2TokenFormdataRequestBody defines body for OAuth2Token for application/x-www-form-urlencoded ContentType.
type OAuth2TokenFormdataRequestBody = OAuth2TokenRequest

// CreateApplicationJSONRequestBody defines body for CreateApplication for application/json ContentType.
type CreateApplicationJSONRequestBody = CreateApplicationRequest

// LoginJSONRequestBody defines body for Login for application/json ContentType.
type LoginJSONRequestBody = UserLoginRequest

// CreateOrUpdateUserJSONRequestBody defines body for CreateOrUpdateUser for application/json ContentType.
type CreateOrUpdateUserJSONRequestBody = CreateUserRequest

// ResetUserPasswordJSONRequestBody defines body for ResetUserPassword for application/json ContentType.
type ResetUserPasswordJSONRequestBody = ResetPasswordRequest

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
