// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Defines values for OAuth2AuthorizationRequestResponseType.
const (
	Code OAuth2AuthorizationRequestResponseType = "code"
)

// Defines values for OAuth2ErrorSchemaError.
const (
	InvalidClient        OAuth2ErrorSchemaError = "invalid_client"
	InvalidGrant         OAuth2ErrorSchemaError = "invalid_grant"
	InvalidRequest       OAuth2ErrorSchemaError = "invalid_request"
	InvalidScope         OAuth2ErrorSchemaError = "invalid_scope"
	UnauthorizedClient   OAuth2ErrorSchemaError = "unauthorized_client"
	UnsupportedGrantType OAuth2ErrorSchemaError = "unsupported_grant_type"
)

// Defines values for OAuth2TokenRequestGrantType.
const (
	AuthorizationCode OAuth2TokenRequestGrantType = "authorization_code"
	ClientCredentials OAuth2TokenRequestGrantType = "client_credentials"
	Password          OAuth2TokenRequestGrantType = "password"
	RefreshToken      OAuth2TokenRequestGrantType = "refresh_token"
)

// Defines values for OAuth2TokenResponseTokenType.
const (
	Bearer OAuth2TokenResponseTokenType = "Bearer"
)

// CreateUserRequestDto defines model for CreateUserRequestDto.
type CreateUserRequestDto struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

// LoginResponse defines model for LoginResponse.
type LoginResponse struct {
	Token  string `json:"token"`
	UserId string `json:"userId"`
}

// OAuth2AuthorizationRequest defines model for OAuth2AuthorizationRequest.
type OAuth2AuthorizationRequest struct {
	ClientId     string                                 `json:"client_id"`
	RedirectUri  *string                                `json:"redirect_uri,omitempty"`
	ResponseType OAuth2AuthorizationRequestResponseType `json:"response_type"`
	Scope        *string                                `json:"scope,omitempty"`
}

// OAuth2AuthorizationRequestResponseType defines model for OAuth2AuthorizationRequest.ResponseType.
type OAuth2AuthorizationRequestResponseType string

// OAuth2ErrorSchema defines model for OAuth2ErrorSchema.
type OAuth2ErrorSchema struct {
	Error            OAuth2ErrorSchemaError `json:"error"`
	ErrorDescription *string                `json:"error_description,omitempty"`
	ErrorUri         *string                `json:"error_uri,omitempty"`
}

// OAuth2ErrorSchemaError defines model for OAuth2ErrorSchema.Error.
type OAuth2ErrorSchemaError string

// OAuth2TokenRequest defines model for OAuth2TokenRequest.
type OAuth2TokenRequest struct {
	GrantType    OAuth2TokenRequestGrantType `json:"grant_type"`
	RefreshToken *string                     `json:"refresh_token"`
	Scope        *string                     `json:"scope"`
}

// OAuth2TokenRequestGrantType defines model for OAuth2TokenRequest.GrantType.
type OAuth2TokenRequestGrantType string

// OAuth2TokenResponse defines model for OAuth2TokenResponse.
type OAuth2TokenResponse struct {
	AccessToken  string                       `json:"access_token"`
	ExpiresIn    float32                      `json:"expires_in"`
	RefreshToken *string                      `json:"refresh_token,omitempty"`
	Scope        *string                      `json:"scope,omitempty"`
	TokenType    OAuth2TokenResponseTokenType `json:"token_type"`
}

// OAuth2TokenResponseTokenType defines model for OAuth2TokenResponse.TokenType.
type OAuth2TokenResponseTokenType string

// ResetUserPasswordDto defines model for ResetUserPasswordDto.
type ResetUserPasswordDto struct {
	NewPassword string `json:"newPassword"`
	OldPassword string `json:"oldPassword"`
	Username    string `json:"username"`
}

// BadRequest defines model for BadRequest.
type BadRequest struct {
	Message *string `json:"message,omitempty"`
}

// Conflict defines model for Conflict.
type Conflict struct {
	Message *string `json:"message,omitempty"`
}

// CreateUserResponseDto User created
type CreateUserResponseDto struct {
	Id string `json:"id"`
}

// Forbidden defines model for Forbidden.
type Forbidden struct {
	Message *string `json:"message,omitempty"`
}

// InternalServerError defines model for InternalServerError.
type InternalServerError struct {
	Message *string `json:"message,omitempty"`
}

// OAuthErrorBadRequest defines model for OAuthErrorBadRequest.
type OAuthErrorBadRequest = OAuth2ErrorSchema

// UnAuthorized defines model for UnAuthorized.
type UnAuthorized struct {
	Message *string `json:"message,omitempty"`
}

// OAuth2AuthorizationFormdataRequestBody defines body for OAuth2Authorization for application/x-www-form-urlencoded ContentType.
type OAuth2AuthorizationFormdataRequestBody = OAuth2AuthorizationRequest

// OAuth2TokenFormdataRequestBody defines body for OAuth2Token for application/x-www-form-urlencoded ContentType.
type OAuth2TokenFormdataRequestBody = OAuth2TokenRequest

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = CreateUserRequestDto

// LoginJSONRequestBody defines body for Login for application/json ContentType.
type LoginJSONRequestBody = CreateUserRequestDto

// ResetPasswordJSONRequestBody defines body for ResetPassword for application/json ContentType.
type ResetPasswordJSONRequestBody = ResetUserPasswordDto

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xY33PaOBD+Vzy6vp0BF5LOhbc2bTqmJUmB/rh2eoyw1iAwkk+SAyTj//1Gkg02MQEy",
	"bdOHe7PllfTtt9+uVr5DAZ/HnAFTErXvkAAZcybBvLzCpAf/JiCVfgs4U8DMI47jiAZYUc4aU8mZHpPB",
	"BOZYP8WCxyAUtYvMQUo8Bv2oVjGgNpJKUDZGaermI3w0hUChVA8RkIGgsV4btTUER2QYUhedcxZGNHg6",
	"PD2QPBEBOEGORKMSgBV8lCB6GX2vFT8KIiaE6k84ui6ADXEkYRuB3sYJzI4EuVvOUVLtl6aQCiCo/U3b",
	"fD/AU+3YBRcjSgiwJ+N7gyB1kc8UCIajPogbEG+E4OLJgOVYHAvGsWhSF129TNTEvD0yfZ4JCFEb/dHY",
	"ZGbDfpUNs3jTrN63E/bnzEemJ3FBb4E8GV2XXDkFGNog80kvWEwggzvLnwfTogwvxlIuuDAezil7D2ys",
	"Jqj9l7uN1kWJ1JGbg52mdBxRG/3zDdduX9a+erWz738+Q+6eLFov4m62vp9WLnrPx5TlZeFInxSf2dSr",
	"dME/INczOzdbqgqglVQeG6OFgmqPQBtEFJgaVpYgjYpQAYEaJoJqg5CLOVaojfS7W2VvKRvaL3cIWDLX",
	"LgWcQMGRzQwZ8Bj2U1Je2C3A3s1OMeHuJQbkdShHSNkNjigZ5jnorkfsXoWBscDmPWF4nRwbq4TJJI65",
	"UJBZ5pjz6dblKjIMqGEpB+92WWUReZg26+VuigZaYAXhlDkqoC8QhYuiG5rAFrJJ7x8KkJOhFe86VIEA",
	"AkxRHMlK38vT2neIJVGERxGgthIJPCSdPZZbnBS82kvMowoADgKQcuMILPE81ugQrDqT0duAXtGO//HW",
	"f35Jfemz3mlw7r/wZ/GXT+edszqsOrfks0+vqL/sTrve5eDv1tXr2cKnCzqaX6ivfWN8g9+ejHtvzyI9",
	"jj9feP6ULy8Hb5rdafe0+9pfhR/q/TB6t1z0Ov0uvHt30fwwOAkXcRc6YevF9dXsxarzaYjJBykXp0FV",
	"NsMypgLkkJbdaHne2pgl8xGIyvht3MaSjBnFhLJmaxpiLknIJMchw5GcERbyJmvhkIZs1mxNGV4AOqJQ",
	"ZFXynkxfARYgKqS2JYdStEqLlQiokkoPJCh9/l1n6j/+AGSwuD78DOQRuX66E7O4u1tCXtGZukhCkAiq",
	"VqYCZ1cTE5NBrpCReb3Iz5TO5wHKGgy9lP26AThRKrZNCmWh4VlRZfSlMcqaBHFDAw30BoS0DYxXf173",
	"DHMxMBxT1Eatulf3TMVSEwOqwXVFa5TKmql+YEpiuSOy1cEpHbyOr3U+B6bsXLObMM/6tK86q5ElGaR6",
	"xcnqgf5uWVssFjV97NYSEQHT5ZYc23lWtglpmhYObMNEy2ve97ifmARBLpoAJiCM5XserHkqm5+bap93",
	"spSNnRKxTnZebOA/3FIYkCeet8vRNf5GZQdvJj9/7GRdW/BY6jR4aUhwzjlTgkfou/6WCWdd8GIudyvG",
	"iP4wpQyyUvQLFVLqAyqU0bQR+IG3ofIBW3H3yHX3G8ff1J3dkbf3Iwc72s7JKuN2yDeXqIMjfhzdlbe0",
	"tFzmddt0P+QH8Fb9D+XQkD0iUKVrsZnU2j+p9DvixDs7wK/Cf6LTL1/2T6j6yXGYfhqRvmvuVpG5ijqU",
	"Obp5Viun5ghQiWDSyVuWsqCM/W+npR9XPspX84rCYQkTa4tfJ8afrRSh+81iA1itGNOWOvmNzAm5sBVo",
	"n3J6peV/joIqW+b/FbT+vbZbBWn6XwAAAP//pRySZPYXAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
