// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// ClientCredentialsResponse defines model for ClientCredentialsResponse.
type ClientCredentialsResponse struct {
	AccessToken  string  `json:"access_token"`
	ExpiresIn    float32 `json:"expires_in"`
	RefreshToken *string `json:"refresh_token,omitempty"`
	Scope        *string `json:"scope,omitempty"`
	TokenType    string  `json:"token_type"`
}

// CreateUserRequestDto defines model for CreateUserRequestDto.
type CreateUserRequestDto struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

// LoginResponse defines model for LoginResponse.
type LoginResponse struct {
	Token  string `json:"token"`
	UserId string `json:"userId"`
}

// ResetUserPasswordDto defines model for ResetUserPasswordDto.
type ResetUserPasswordDto struct {
	NewPassword string `json:"newPassword"`
	OldPassword string `json:"oldPassword"`
	Username    string `json:"username"`
}

// BadRequest defines model for BadRequest.
type BadRequest struct {
	Message *string `json:"message,omitempty"`
}

// Conflict defines model for Conflict.
type Conflict struct {
	Message *string `json:"message,omitempty"`
}

// CreateUserResponseDto User created
type CreateUserResponseDto struct {
	Id string `json:"id"`
}

// Forbidden defines model for Forbidden.
type Forbidden struct {
	Message *string `json:"message,omitempty"`
}

// InternalServerError defines model for InternalServerError.
type InternalServerError struct {
	Message *string `json:"message,omitempty"`
}

// OAuthErrorBadRequest defines model for OAuthErrorBadRequest.
type OAuthErrorBadRequest struct {
	Error            string  `json:"error"`
	ErrorDescription *string `json:"error_description,omitempty"`
	ErrorUri         *string `json:"error_uri,omitempty"`
}

// UnAuthorized defines model for UnAuthorized.
type UnAuthorized struct {
	Message *string `json:"message,omitempty"`
}

// OauthClientCredentialsFormdataBody defines parameters for OauthClientCredentials.
type OauthClientCredentialsFormdataBody struct {
	GrantType    string  `form:"grant_type" json:"grant_type"`
	RefreshToken *string `form:"refresh_token" json:"refresh_token"`
	Scope        *string `form:"scope" json:"scope"`
}

// OauthClientCredentialsFormdataRequestBody defines body for OauthClientCredentials for application/x-www-form-urlencoded ContentType.
type OauthClientCredentialsFormdataRequestBody OauthClientCredentialsFormdataBody

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = CreateUserRequestDto

// LoginJSONRequestBody defines body for Login for application/json ContentType.
type LoginJSONRequestBody = CreateUserRequestDto

// ResetPasswordJSONRequestBody defines body for ResetPassword for application/json ContentType.
type ResetPasswordJSONRequestBody = ResetUserPasswordDto

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xX33PaOBD+Vzy6vh0/XEgyF94S0mRMSkggaXLt5Bhhr0FgJN9KjiEd/vcbyYZgMAUy",
	"7XEP9+YfK+nb3W+/XX0nrhiHggNXktS+EwQZCi7BvJxTrw1/RyCVfnMFV8DNIw3DgLlUMcHLQym4/ibd",
	"AYypfgpRhICKJZuMQUraB/2opiGQGpEKGe+T2aww/yJ6Q3AVmelPHkgXWaj3JjUNwcIUw6xA6oL7AXMP",
	"h6cNUkToguXOkWhUCFTBgwRsp+G7UGIviNTzmP5Fg9slsD4NJKwi0MdYrjnRI4UV55iX75cOIUPwSO2b",
	"tnnewVPt2KXAHvM84AeL9xuCWYE4XAFyGnQAXwA/IQo8GLA5FisBYyVoZgXSOovUwLz9lPKBuZcrGAvJ",
	"n24G1UarCNl2YiRHPe9flQ9c+yyQvYJ3sITcCGUtwdAGyUFm73rAgKs6ggdcMRrIeaVurb4sRuq6IGVX",
	"iVFSFDCh4zDQyGDaGPSuXNZiDefh1fl4wxzp8PaxW3dOnFH49KXeOC3BtPHqPTqsxZxJc9i0b+7/rLYu",
	"RrHDYtYbX6qvHWP8Qq+O+u2r00B/p4+XtjMUk5v7T5XmsHncvHCm/l2p4wfXk7jd6DTh+vqycnd/5Mdh",
	"Exp+9eS2NTqZNr50qXcnZXzskkIOLyYhQ5BdlnWjatsLYx6Ne2A4jeAjyEGe21R6fc6ox3ilOvSpkJ7P",
	"paA+p4EcedwXFV6lPvP5qFIdchpDHhjpihBy6WtO7Cafl489B4qA63utUDqTrsxumQiscz4r6obpqabv",
	"QZaQShkLNDUxZvwz8L4akNofORGIpFaTMSTLlNYWUiN/faPF17PiV7t4+vz7h63eLjYpvB2d59pn0Wf8",
	"nQWwoECuC84O/Se1S7ORC7ANEpQO/W3qxv6x5xDf7h5+EXi3h0vW8umFDPIcMS4QCW6ETE07Wt7SSc2U",
	"w/08Nz3zeilwTBWpkcbjPUnVUG/VW6mdgVJhoqiM+ybOiilTZRqjLErAF+ZqoC+AMlFbu/SxZJvIhcBp",
	"yEiNVEt2yTbUUwMDqixopAblBWNCkXTCrG5fAQekCqykVi1jbsVMDSzXiHbXfVNtq4+UKyutYJ1v01o0",
	"7UhLn7am8ySJOkh1LrzpD7rTpBjHcdEXOC5GGAB3hZd0s03tykBZSNMaSdY0k0dBQHs6rgoj+JEKbrFc",
	"IdISjrzebayXhvqKbe/Voz8g+KRGfiu/XRTKaWMtb+6qOQ26E5kEa0+PEgx5Wy+wlnMHKbP443sX64ZC",
	"+1JH7SxhW11whSIgz/pf2fB9M1WTlmBRS9tZaYhXafjWN3am3p5Bz2tMsywrNG/WE79D3PKvMrum7B2J",
	"ysyOZlF1+6LMreDIPt3Br6Xr2vHT0/YFeXeN3fhTDnR73cwi030txi1dM2pqFS0EFSFPpW+NUMb+P8el",
	"nyci2WkkRziSgOHC4t8j469mCuo5Z3nwyGeMGYes+Uhn+QITBdrGnHZm+1/DoNxR7X8GLe6gm1kwm/0T",
	"AAD//6nJNVJ9EwAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
