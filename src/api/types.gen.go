// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Defines values for OAuth2TokenRequestGrantType.
const (
	AuthorizationCode OAuth2TokenRequestGrantType = "authorization_code"
	ClientCredentials OAuth2TokenRequestGrantType = "client_credentials"
	Password          OAuth2TokenRequestGrantType = "password"
	RefreshToken      OAuth2TokenRequestGrantType = "refresh_token"
)

// Defines values for OAuth2TokenResponseTokenType.
const (
	Bearer OAuth2TokenResponseTokenType = "bearer"
)

// CreateUserRequestDto defines model for CreateUserRequestDto.
type CreateUserRequestDto struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

// LoginResponse defines model for LoginResponse.
type LoginResponse struct {
	Token  string `json:"token"`
	UserId string `json:"userId"`
}

// OAuth2TokenRequest defines model for OAuth2TokenRequest.
type OAuth2TokenRequest struct {
	GrantType    OAuth2TokenRequestGrantType `json:"grant_type"`
	RefreshToken *string                     `json:"refresh_token"`
	Scope        *string                     `json:"scope"`
}

// OAuth2TokenRequestGrantType defines model for OAuth2TokenRequest.GrantType.
type OAuth2TokenRequestGrantType string

// OAuth2TokenResponse defines model for OAuth2TokenResponse.
type OAuth2TokenResponse struct {
	AccessToken  string                       `json:"access_token"`
	ExpiresIn    float32                      `json:"expires_in"`
	RefreshToken *string                      `json:"refresh_token,omitempty"`
	Scope        *string                      `json:"scope,omitempty"`
	TokenType    OAuth2TokenResponseTokenType `json:"token_type"`
}

// OAuth2TokenResponseTokenType defines model for OAuth2TokenResponse.TokenType.
type OAuth2TokenResponseTokenType string

// ResetUserPasswordDto defines model for ResetUserPasswordDto.
type ResetUserPasswordDto struct {
	NewPassword string `json:"newPassword"`
	OldPassword string `json:"oldPassword"`
	Username    string `json:"username"`
}

// BadRequest defines model for BadRequest.
type BadRequest struct {
	Message *string `json:"message,omitempty"`
}

// Conflict defines model for Conflict.
type Conflict struct {
	Message *string `json:"message,omitempty"`
}

// CreateUserResponseDto User created
type CreateUserResponseDto struct {
	Id string `json:"id"`
}

// Forbidden defines model for Forbidden.
type Forbidden struct {
	Message *string `json:"message,omitempty"`
}

// InternalServerError defines model for InternalServerError.
type InternalServerError struct {
	Message *string `json:"message,omitempty"`
}

// OAuthErrorBadRequest defines model for OAuthErrorBadRequest.
type OAuthErrorBadRequest struct {
	Error            string  `json:"error"`
	ErrorDescription *string `json:"error_description,omitempty"`
	ErrorUri         *string `json:"error_uri,omitempty"`
}

// UnAuthorized defines model for UnAuthorized.
type UnAuthorized struct {
	Message *string `json:"message,omitempty"`
}

// OAuth2TokenFormdataRequestBody defines body for OAuth2Token for application/x-www-form-urlencoded ContentType.
type OAuth2TokenFormdataRequestBody = OAuth2TokenRequest

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = CreateUserRequestDto

// LoginJSONRequestBody defines body for Login for application/json ContentType.
type LoginJSONRequestBody = CreateUserRequestDto

// ResetPasswordJSONRequestBody defines body for ResetPassword for application/json ContentType.
type ResetPasswordJSONRequestBody = ResetUserPasswordDto

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xXTXPiOBD9Ky7t3NaAA0lq41smmaRMhnwAmWRnKksJuw0CW/JKcgxJ+b9vSTZgEydA",
	"amazh735Q+p+3f30uvWMXBZGjAKVAtnPiIOIGBWgXz5jrwt/xyCkenMZlUD1I46igLhYEkYbE8Go+ibc",
	"MYRYPUWcRcAlyYyEIAQegXqU8wiQjYTkhI5QmpqLL2w4AVeiVH3yQLicRMo2shUEg+cYUhOdMOoHxP04",
	"PF0QLOYuGO4CiULFAUu4FcC7efpOJdsJIvY8on7h4LoA1seBgHUEyo3hao8eMteCI151XCqFhIOH7B9q",
	"zcMWkarAzhgfEs8D+mH5XiFITeRQCZzioAf8EfgXzhn/MGALLEYGxsjQpCa6Oo7lWL/9lOMDiyjXMJrZ",
	"n0EJ1aurYk42EyNz9bD7qbylKmbGyRN4H1aQSyaNAgy1IHOkbRePqMadn9A3D14ZXoSFSBjXEYaEfgU6",
	"kmNk/2G+THosFDdCyLZJxRRko79+4NrTce27VTt6+P0TMjeUY2nEXLl+WRwTfWUjQhfCs2NMkk2hmjfK",
	"u7OFmuTrzNxUFUB9Ipp99b9wHspARhxTOci2PiOgcaiM47yemj8Dl3mlZCggPgcxHmS+TeQGBKgcuBw8",
	"oJLgQBQArWIrb7OfEY2DAA8DQLbkMVTsEC7LkG1YuZacQlQbE/Ou+mHXBSFWgcAMh5FCh2DeHg/PXXJF",
	"2s7tk7N3SRzh0O6Be+IcOtPo/ttJ+6gO8/aTd+eQK+LMOpOOddn/s3V1Ok0ckpBheCa/9/TiR3y+P+qe",
	"HwXqO747s5wJm132vzQ7k85B59SZ+zf1nh9czJJuu9eBi4uz5k1/30+iDrT91uH11fRw3v42wN6NEMmB",
	"iyoSDLOIcBADUg6jZVnLxTQOh8Ar67cKGwtvRAn2CG22Jj5mwvOpYNinOBBTj/qsSVvYJz6dNlsTihNA",
	"b1X7xR/t8QVNh4A58AqqrdGhVK2SsVICqqjSBQFSydd1zv7d9YtCcr29hLHAu/44wSt6N0vIK9qTiQS4",
	"MSdy3lOCn8+uuib9BUOyEp0xHmKJbNS+66O8PyhTeQGXpsdSRlmPIdTXeZZEan4pjKImgD8SVwF9BC6y",
	"/mPV9+qWzlwEFEcE2ahVt+qWViw51qAaTClaY8nbiGVaWO5kmSwYGrvhKGKHQKXWQKTNc/2s1LkoISjL",
	"Jgj5mXnzN/rwrJYkSc1nPKzFPACqdNUrN+ZPHHxko98aq9tBI++mjQo5T9OsloW7Q9OydhoFtvaY62TF",
	"BNCL9flSNdjPvFcZXaJsVE5qevPeezcricAjodh8rMEYJ4xKzgL0oP41NH1er3w2pRjYUOuMnODrJV+N",
	"MltXfLd0V85Kafm0qu73suRb5K36rrRtyd5RqNJwqje1Nm8qXTv2raMt4ircBw/u7zdvqLrMbMefRqAm",
	"vtdZpAdCg1BDzUBybtQMDjLmVBiLzlMmlF7/n+PSz5OP8oBcIRxZwvhyxb9Hxl/NFK7GhmIfr2aMni6M",
	"xWBt+IxnCrSJOd2S+V/DoMrJ538GLS+5r7MgTf8JAAD//+g+ma3eEwAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
